{"version":3,"sources":["components/app-header.js","components/todo-list-item.js","components/todo-list.js","components/search-panel.js","components/item-status-filter.js","components/item-add-form.js","index.js"],"names":["AppHeader","toDo","done","className","TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","type","Component","TodoList","items","elements","map","item","id","itemProps","SearchPanel","state","term","onTermChange","e","onSearchChange","setState","target","value","placeholder","onChange","filterButtons","name","ItemStatusFilter","filter","onFilterChange","buttons","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdd","App","maxId","createNewItem","search","deleteItem","idEl","findIndex","el","slice","addItem","text","newItem","toggleProp","arr","prop","oldItem","length","toLowerCase","indexOf","doneCount","todoCount","visibleItems","searchItems","filterItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bdbdc31.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Мой ToDo список</h1>\r\n            <h2>{toDo} еще сделать, {done} сделано</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\r\n\r\n\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={ classNames }>\r\n                <span\r\n                    className=\"todo-list-item-label\"\r\n                    onClick={onToggleDone}>\r\n                    {label}\r\n                </span>\r\n                <button type=\"button\"\r\n                      className=\"btn btn-outline-success btn-sm float-right\"\r\n                      onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n                <button type=\"button\"\r\n                      className=\"btn btn-outline-danger btn-sm float-right\"\r\n                      onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nimport TodoListItem from './todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ items, onDeleted,\r\n                      onToggleImportant, onToggleDone}) => {\r\n\r\n    const elements = items.map((item) => {\r\n\r\n        const {id, ...itemProps} = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    { ...itemProps }\r\n                    onDeleted={ () => onDeleted(id) }\r\n                    onToggleImportant={ () => onToggleImportant(id) }\r\n                    onToggleDone={ () => onToggleDone(id) } />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onTermChange = (e) => {\r\n        const {onSearchChange = () => {}} = this.props;\r\n        this.setState({\r\n            term: e.target.value\r\n        });\r\n\r\n        onSearchChange(e.target.value);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return <input className=\"form-control search-input\"\r\n                      placeholder=\"поиск\"\r\n                      value={this.state.term}\r\n                      onChange={ this.onTermChange }/>;\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nconst filterButtons = [\r\n    { name: 'all', label: 'Все' },\r\n    { name: 'active', label: 'Активные' },\r\n    { name: 'done', label: 'Сделанные' }\r\n];\r\n\r\nconst ItemStatusFilter = ({filter, onFilterChange = () => {}}) => {\r\n\r\n    const buttons = filterButtons.map(({name, label}) => {\r\n        const isActive = name === filter;\r\n        const classNames = 'btn ' + (isActive ? 'btn-info' : 'btn-outline-secondary');\r\n\r\n        return (\r\n            <button key={name}\r\n                    type=\"button\"\r\n                    onClick={() => onFilterChange(name)}\r\n                    className={classNames}>{label}</button>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"btn-group\">\r\n            { buttons }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemStatusFilter;\r\n","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.onAdd(this.state.label);\r\n      this.setState({\r\n          label: ''\r\n      });\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        const { onAdd } = this.props;\r\n\r\n\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"Что должно быть сделано\"\r\n                       value={this.state.label} />\r\n                <button className=\"btn btn-outline-secondary\"\r\n                        onClick={() => onAdd}>Добавить новую задачу\r\n                </button>\r\n            </form>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport AppHeader from './components/app-header';\r\nimport TodoList from './components/todo-list';\r\nimport SearchPanel from './components/search-panel';\r\nimport ItemStatusFilter from './components/item-status-filter';\r\nimport ItemAddForm from './components/item-add-form';\r\n\r\nimport './index.css';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n    maxId = 1;\r\n\r\n    state = {\r\n        items: [\r\n            this.createNewItem('Выпить кофе'),\r\n            this.createNewItem('Сделать приложение'),\r\n            this.createNewItem('Пойти погулять')\r\n        ],\r\n        filter: 'all',\r\n        search: ''\r\n    };\r\n\r\n    createNewItem(label) {\r\n\r\n        return (\r\n            {\r\n                label,\r\n                important: false,\r\n                done: false,\r\n                id: this.maxId++\r\n            }\r\n        )\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n\r\n        this.setState(({ items} ) => {\r\n\r\n            const idEl = items.findIndex((el) => el.id === id);\r\n\r\n            const newData = [\r\n                ...items.slice(0, idEl),\r\n                ...items.slice(idEl + 1)\r\n            ];\r\n\r\n            return {\r\n                items: newData\r\n            };\r\n        });\r\n\r\n\r\n    };\r\n\r\n    addItem = (text) => {\r\n\r\n        this.setState(( { items }) => {\r\n\r\n\r\n            const newItem = this.createNewItem(text);\r\n\r\n            const newData = [...items, newItem];\r\n\r\n            return {\r\n                items: newData\r\n            }\r\n\r\n\r\n        })\r\n\r\n    };\r\n\r\n    toggleProp(arr, id, prop) {\r\n\r\n        const idEl = arr.findIndex((el) => el.id === id);\r\n        const oldItem = arr[idEl];\r\n        const newItem = {...oldItem, [prop]: !oldItem[prop]};\r\n\r\n        return [...arr.slice(0, idEl),\r\n            newItem,\r\n            ...arr.slice(idEl + 1)]\r\n    }\r\n\r\n\r\n\r\n    onToggleImportant = (id) => {\r\n\r\n        this.setState(( { items} ) => {\r\n\r\n            return {\r\n                items: this.toggleProp(items, id, 'important')\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n\r\n        this.setState(( { items} ) => {\r\n\r\n            return {\r\n                items: this.toggleProp(items, id, 'done')\r\n            }\r\n        })\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    onSearchChange = (search) => {\r\n        this.setState({ search });\r\n    };\r\n\r\n    filterItems(items, filter) {\r\n        if (filter === 'all') {\r\n            return items;\r\n        } else if (filter === 'active') {\r\n            return items.filter((item) => (!item.done));\r\n        } else if (filter === 'done') {\r\n            return items.filter((item) => item.done);\r\n        }\r\n    }\r\n\r\n    searchItems(items, search) {\r\n        if (search.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const doneCount = this.state.items.filter((el) => el.done).length;\r\n\r\n        const todoCount = this.state.items.length - doneCount;\r\n\r\n        const { items, filter, search } = this.state;\r\n        const visibleItems = this.searchItems(this.filterItems(items, filter), search);\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter filter={filter}\r\n                                      onFilterChange={this.onFilterChange} />\r\n                </div>\r\n                <TodoList items={ visibleItems }\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}/>\r\n\r\n                <ItemAddForm onAdd={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}